@using LexiconLMS.Client.Services;
@using LexiconLMS.Shared.DTOs;
@page "/AddCourse"
@inject ICourseClient http
@inject NavigationManager NavMan


<h3>AddCourse</h3>


<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm EditContext="editContext" OnValidSubmit="CreateCourse" >
            <DataAnnotationsValidator></DataAnnotationsValidator>
            <ValidationSummary></ValidationSummary>
            <div class="form-group">
                <label asp-for="Course.Name" class="control-label"></label>
                <InputText @bind-Value="createCourseDto.Name" class="form-control"></InputText>
                <ValidationMessage For="() => createCourseDto.Name"></ValidationMessage>
            </div>
            @*<div class="form-group">
                <label asp-for="Course.Desc" class="control-label"></label>
                <input asp-for="Course.Desc" class="form-control" />
                <span asp-validation-for="Course.Desc" class="text-danger"></span>
            </div>*@
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </EditForm>
    </div>
</div>



@code {
    private CreateCourseDto createCourseDto = new CreateCourseDto();
    private EditContext editContext = default!;

    protected override void OnInitialized()
    {
        editContext = new EditContext(createCourseDto);
    }

    private async Task CreateCourse()
    {
        //ToDo call API with HttpClient
        var res = await http.AddCourseAsync(createCourseDto);
        //If ok add course!!!! 

        //Navigate back to Landingpage use Navigationmanager!!!!
        NavMan.NavigateTo("/", new  NavigationOptions());
    }

}
