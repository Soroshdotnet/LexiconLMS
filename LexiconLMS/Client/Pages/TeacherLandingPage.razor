@page "/TeacherLandingPage"
@using LexiconLMS.Client.Components.Teachers
@using LexiconLMS.Client.Models;
@using LexiconLMS.Client.Services;
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication;

@inject AuthenticationStateProvider authenticationStateProvider;
@inject IAccessTokenProvider accessTokenProvider;



<div id="teacherLandingPage" class="container">
    <div class="row">
        <div class="col">
            <CourseList></CourseList>
        </div>
        <div class="col">
            <CourseModulesTeachers></CourseModulesTeachers>
        </div>
    </div>
</div>


@code {

    private IEnumerable<CourseDto> courses = new List<CourseDto>();

    [Inject]
    public ICourseClient CourseClient { get; set; } = default!;




    protected override async Task OnInitializedAsync()
    {
        //httpClient.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", await GetTokenAsync())

        var res = await CourseClient.GetAsync();
        courses = res;
        //if (res is not null)
        //  courses = res.ToList();
    }
    private async Task<string> GetTokenAsync()
    {
        //var authState = await authenticationStateProvider.GetAuthenticationStateAsync();
        //var user = authState.User;

        //if (user.identity.isauthenticated)
        //{
        //    return await accessTokenProvider.RequestAccessToken();
        //}

        return string.Empty;
    }
}
